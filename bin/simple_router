#!/usr/bin/env ruby

require 'rubygems'
require 'bundler'
Bundler.setup :default

require 'gli'
require 'trema'

# simple_router command
module SimpleRouterApp
  extend GLI::App

  desc 'Dump routing table'
  arg_name ''
  command :dump_routing_table do |c|
    c.desc 'Location to find socket files'
    c.flag [:S, :socket_dir], default_value: Trema::DEFAULT_SOCKET_DIR
    c.flag [:n, :netmask_length]

    c.action do |_global_options, options, args|
      if options[:netmask_length]
        netmask_length = options[:netmask_length].to_i
        if netmask_length < 0
          return "NetMaskLength(#{netmask_length}) is not exist."
        end
      puts Trema.trema_process('SimpleRouter', options[:socket_dir]).controller.
        dump_routing_table(netmask_length)
      else
      puts Trema.trema_process('SimpleRouter', options[:socket_dir]).controller.
        dump_routing_table()
      end
    end
  end

  desc 'Add the routing table entry'
  arg_name 'destination_ip netmask_length next_hop_ip'
  command :add_entry do |c|
    c.desc 'Location to find socket files'
    c.flag [:S, :socket_dir], default_value: Trema::DEFAULT_SOCKET_DIR

    c.action do |_global_options, options, args|
      destination = args[0]
      netmask_length = args[1].to_i
      next_hop = args[2]
      puts Trema.trema_process('SimpleRouter', options[:socket_dir]).controller.
        add_entry_routing_table(destination, netmask_length, next_hop)
    end
  end

  desc 'Delete the routing table entry'
  arg_name 'destination_ip netmask_length'
  command :delete_entry do |c|
    c.desc 'Location to find socket files'
    c.flag [:S, :socket_dir], default_value: Trema::DEFAULT_SOCKET_DIR

    c.action do |_global_options, options, args|
      destination = args[0]
      netmask_length = args[1].to_i
      Trema.trema_process('SimpleRouter', options[:socket_dir]).controller.
        delete_entry_routing_table(destination, netmask_length)
    end
  end

  desc 'Dump interface'
  arg_name ''
  command :dump_interface do |c|
    c.desc 'Location to find socket files'
    c.flag [:S, :socket_dir], default_value: Trema::DEFAULT_SOCKET_DIR

    c.action do |_global_options, options, args|
      puts Trema.trema_process('SimpleRouter', options[:socket_dir]).controller.
        dump_interface()
    end
  end

  desc 'Dump status'
  arg_name ''
  command :dump_status do |c|
    c.desc 'Location to find socket files'
    c.flag [:S, :socket_dir], default_value: Trema::DEFAULT_SOCKET_DIR

    c.action do |_global_options, options, args|
      puts Trema.trema_process('SimpleRouter', options[:socket_dir]).controller.
        dump_status()
    end
  end

  exit run(ARGV)
end
